<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:applications="clr-namespace:PortAbuse2.Applications"
                    xmlns:result="clr-namespace:PortAbuse2.Core.Result;assembly=PortAbuse2.Core"
                    xmlns:controls="clr-namespace:PortAbuse2.Controls"
                    x:Class="PortAbuse2.Styling.Templates">
    <DataTemplate x:Key="AppTemplate" DataType="applications:AppIconEntry">
        <Grid Height="20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Image Source="{Binding Icon}" Grid.ColumnSpan="1" HorizontalAlignment="Stretch" Height="Auto"
                   VerticalAlignment="Stretch" Width="Auto" />
            <TextBlock Grid.Column="1" HorizontalAlignment="Stretch" Margin="5,0" TextWrapping="Wrap"
                       Text="{Binding Name, FallbackValue=???}" VerticalAlignment="Center" />
            <TextBlock Grid.Column="2" HorizontalAlignment="Stretch" Margin="5,0" TextWrapping="Wrap"
                       Text="{Binding TitleString}" VerticalAlignment="Center" />
            <TextBlock x:Name="HiddenBlock" Grid.Column="3" HorizontalAlignment="Stretch" Margin="5,0"
                       TextWrapping="Wrap" Text="{Binding HiddenCount, StringFormat=[Hidden IPs: \{0\}]}"
                       VerticalAlignment="Center" Visibility="Collapsed" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding HaveHidden}" Value="True">
                <Setter TargetName="HiddenBlock" Value="Visible" Property="Visibility" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ContextMenu x:Key="EntryContextMenu"
                 Tag="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}">
        <MenuItem x:Name="HideThisIpMenuItem" Header="Hide this IP for App" Click="HideThisIpMenuItem_OnClick" />
        <MenuItem Header="Block all connections for" Tag="0" HorizontalContentAlignment="Stretch">
            <controls:BlockInOutMenu SecondsToBlock="5" BlockButtonClicked="BlockClicked" />
            <controls:BlockInOutMenu SecondsToBlock="10" BlockButtonClicked="BlockClicked" />
            <controls:BlockInOutMenu SecondsToBlock="15" BlockButtonClicked="BlockClicked" />
            <controls:BlockInOutMenu SecondsToBlock="30" BlockButtonClicked="BlockClicked" />
            <controls:BlockInOutMenu SecondsToBlock="60" BlockButtonClicked="BlockClicked" />
            <controls:BlockInOutMenu SecondsToBlock="120" BlockButtonClicked="BlockClicked" />
        </MenuItem>
    </ContextMenu>
    <controls:BlockTimeContainer x:Key="BlockTimeContainerClass" />
    <DataTemplate x:Key="ResultTemplate" DataType="result:ResultObject">
        <Grid x:Name="ResultObjectTpl" Margin="2" ContextMenu="{DynamicResource EntryContextMenu}"
              Visibility="{Binding HiddenProp, ConverterParameter=true, Converter={StaticResource VisibilityConverter}}">
            <Rectangle x:Name="ResultBg" Fill="Transparent" Stroke="#FFD1D0D0" />
            <Grid Height="Auto" Width="Auto">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="85" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Image Source="{Binding Geo.CountryCode, Converter={StaticResource CountryFlagConverter}}"
                       Grid.Column="0" HorizontalAlignment="Left" Height="24" VerticalAlignment="Stretch" Width="24"
                       Margin="3,0" />
                <TextBlock HorizontalAlignment="Left" Margin="5,2" TextWrapping="Wrap"
                           Text="{Binding ShowIp, FallbackValue=100.100.100.100}" VerticalAlignment="Center"
                           Grid.Row="0" Grid.Column="1" FontSize="10" />
                <TextBlock HorizontalAlignment="Left" Margin="5,2" TextWrapping="Wrap"
                           Text="{Binding Hostname, FallbackValue=NoHost}" VerticalAlignment="Center"
                           Grid.Row="0" Grid.Column="3" FontSize="10" />
                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" Margin="5,2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap"
                               Text="{Binding Geo.Result, FallbackValue=Nowhere}" VerticalAlignment="Center"
                               FontSize="9" Grid.Column="1" />
                    <TextBlock x:Name="ExtraInfoBox" HorizontalAlignment="Center" Margin="5,2,10,2" TextWrapping="Wrap"
                               Text="{Binding ExtraInfo, FallbackValue=NoInfo}" VerticalAlignment="Center"
                               Grid.Row="0" Grid.Column="0" Visibility="Collapsed" FontSize="11" FontStyle="Italic"
                               Foreground="#FF030042" FontWeight="Bold" />
                </Grid>
                <Grid Grid.ColumnSpan="2" Grid.Column="4" HorizontalAlignment="Left" Height="40" Margin="0"
                      Grid.Row="0" Grid.RowSpan="3" VerticalAlignment="Top" Width="Auto">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button Content="B" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right"
                            VerticalAlignment="Center" Width="40" Margin="2" Background="{DynamicResource BlockColor}"
                            Click="Block_Click" />
                    <Button x:Name="ButtonBlocked30"
                            Content="{Binding Source={StaticResource BlockTimeContainerClass}, Path=CurrentBlockTime, Converter={StaticResource ShowBlockTime}, FallbackValue=B 30}"
                            Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center"
                            MinWidth="40" Margin="2,2,6,2" Background="{DynamicResource Block30Color}"
                            Click="Block30Sec_Click" BorderThickness="1" />
                </Grid>
                <Grid Grid.Column="2" MinWidth="90" HorizontalAlignment="Stretch" Height="Auto" Margin="2,0"
                      Grid.Row="0" VerticalAlignment="Stretch" Width="Auto">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock HorizontalAlignment="Center" Margin="2,1" TextWrapping="Wrap"
                               Text="{Binding PackagesReceived, Converter={StaticResource HugeNumbersConverter}, FallbackValue=0, StringFormat=RxTx: \{0\}}"
                               VerticalAlignment="Center"
                               Grid.Row="0" Grid.Column="0" FontSize="10" />
                    <TextBlock HorizontalAlignment="Center" Margin="2,1" TextWrapping="Wrap"
                               Text="{Binding DataTransfered, Converter={StaticResource ByteSizeConverter}, FallbackValue=0, StringFormat=Size: \{0\}}"
                               VerticalAlignment="Center"
                               Grid.Row="0" Grid.Column="1" FontSize="10" />
                </Grid>
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Blocked}" Value="True">
                <Setter Property="IsEnabled" TargetName="ButtonBlocked30" Value="False" />
                <Setter Property="Fill" TargetName="ResultBg" Value="{StaticResource PaLightRed}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ForseShown}" Value="True">
                <Setter Property="Stroke" TargetName="ResultBg" Value="{StaticResource HiddenRowColor}" />
                <Setter Property="StrokeThickness" TargetName="ResultBg" Value="3" />
            </DataTrigger>
            <DataTrigger Binding="{Binding HaveExtraInfo}" Value="True">
                <Setter Property="Visibility" TargetName="ExtraInfoBox" Value="Visible" />
            </DataTrigger>
            <DataTrigger Value="True"
                         Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}">
                <Setter Property="Fill" TargetName="ResultBg">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#1900DCFF" />
                            <GradientStop Color="#19008BFF" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Stroke" TargetName="ResultBg" Value="#7F008BFF" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <Style x:Key="HiddenContainer" TargetType="{x:Type ListBoxItem}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Path=(result:ResultObject.HiddenProp)}"
                Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding Path=(result:ResultObject.Old)}"
                Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>